{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/card\";\n\nfunction FirstPageComponent_mat_card_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 2)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", message_r2.author, \": \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r2.message);\n  }\n}\n\nfunction FirstPageComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const message_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(asyncPipe) \", message_r3.author, \": \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r3.message);\n  }\n}\n\nexport class FirstPageComponent {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n    this.url = 'https://angular-initiation-default-rtdb.firebaseio.com/messages.json';\n    this.listMessages = [{\n      author: \"test\",\n      message: \"test\"\n    }];\n    this.listMessageObservable$ = new Observable();\n  }\n\n  ngOnInit() {\n    this._httpClient.get(this.url).subscribe(result => {\n      this.listMessages = result;\n      console.log(\"this.listMessages\", this.listMessages);\n    });\n\n    this.listMessageObservable$ = this._httpClient.get(this.url);\n  }\n\n}\n\nFirstPageComponent.ɵfac = function FirstPageComponent_Factory(t) {\n  return new (t || FirstPageComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n\nFirstPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FirstPageComponent,\n  selectors: [[\"app-first-page\"]],\n  decls: 3,\n  vars: 4,\n  consts: [[\"class\", \"message\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"message\"]],\n  template: function FirstPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FirstPageComponent_mat_card_0_Template, 5, 2, \"mat-card\", 0);\n      i0.ɵɵtemplate(1, FirstPageComponent_div_1_Template, 5, 2, \"div\", 1);\n      i0.ɵɵpipe(2, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.listMessages);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 2, ctx.listMessageObservable$));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.MatCard, i2.AsyncPipe],\n  styles: [\".message[_ngcontent-%COMP%] {\\n  margin-left: 1rem;\\n  margin-top: 1rem;\\n  padding-left: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpcnN0LXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7QUFDSiIsImZpbGUiOiJmaXJzdC1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1lc3NhZ2Uge1xuICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xuICAgIG1hcmdpbi10b3A6IDFyZW07XG4gICAgcGFkZGluZy1sZWZ0OiAxcmVtO1xufSJdfQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAT,QAA2B,MAA3B;;;;;;;;ICFAC,oCAA+D,CAA/D,EAA+D,GAA/D;IACOA;IAAoBA;IAAMA;IAAmBA;;;;;IAA7CA;IAAAA;IAA0BA;IAAAA;;;;;;IAEjCA,4BAA4D,CAA5D,EAA4D,GAA5D;IACOA;IAAgCA;IAAMA;IAAmBA;;;;;IAAzDA;IAAAA;IAAsCA;IAAAA;;;;ADU7C,OAAM,MAAOC,kBAAP,CAAyB;EAM7BC,YAAoBC,WAApB,EAA2C;IAAvB;IAJZ,WAAc,sEAAd;IACD,oBAA0B,CAAC;MAACC,MAAM,EAAE,MAAT;MAAiBC,OAAO,EAAE;IAA1B,CAAD,CAA1B;IAIL,KAAKC,sBAAL,GAA8B,IAAIP,UAAJ,EAA9B;EACD;;EAEDQ,QAAQ;IACN,KAAKJ,WAAL,CAAiBK,GAAjB,CAAgC,KAAKC,GAArC,EAA0CC,SAA1C,CAAqDC,MAAD,IAAsB;MACxE,KAAKC,YAAL,GAAoBD,MAApB;MACAE,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKF,YAAtC;IACD,CAHD;;IAIA,KAAKN,sBAAL,GAA8B,KAAKH,WAAL,CAAiBK,GAAjB,CAAgC,KAAKC,GAArC,CAA9B;EACD;;AAhB4B;;;mBAAlBR,oBAAkBD;AAAA;;;QAAlBC;EAAkBc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCd/BnB;MAGAA;;;;;MAH8CA;MAGrBA;MAAAA","names":["Observable","i0","FirstPageComponent","constructor","_httpClient","author","message","listMessageObservable$","ngOnInit","get","url","subscribe","result","listMessages","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/r1/Documents/Formations/Initiation/angular-initiation/src/app/first-page/first-page.component.ts","/Users/r1/Documents/Formations/Initiation/angular-initiation/src/app/first-page/first-page.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport interface Message {\n  author: string;\n  message: string;\n}\n\n@Component({\n  selector: 'app-first-page',\n  templateUrl: './first-page.component.html',\n  styleUrls: ['./first-page.component.scss']\n})\nexport class FirstPageComponent implements OnInit {\n\n  private url: string = 'https://angular-initiation-default-rtdb.firebaseio.com/messages.json';\n  public listMessages: Message[] = [{author: \"test\", message: \"test\"}];\n  public listMessageObservable$: Observable<Message[]>;\n\n  constructor(private _httpClient: HttpClient) {\n    this.listMessageObservable$ = new Observable<Message[]>();\n  }\n\n  ngOnInit(): void {\n    this._httpClient.get<Message[]>(this.url).subscribe((result: Message[]) => {\n      this.listMessages = result;\n      console.log(\"this.listMessages\", this.listMessages);\n    });\n    this.listMessageObservable$ = this._httpClient.get<Message[]>(this.url)\n  }\n\n}\n","<mat-card class=\"message\" *ngFor=\"let message of listMessages\">\n    <p>{{message.author}}: <span>{{message.message}}</span></p>\n</mat-card>\n<div *ngFor=\"let message of listMessageObservable$ | async\">\n    <p>(asyncPipe) {{message.author}}: <span>{{message.message}}</span></p>\n</div>\n"]},"metadata":{},"sourceType":"module"}